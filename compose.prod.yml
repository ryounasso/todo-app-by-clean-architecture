services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    networks:
      - app_network
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/todo_db
      - SPRING_DATASOURCE_USERNAME=todo_user
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - DB_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    hostname: db
    networks:
      - app_network
    environment:
      - TZ=Asia/Tokyo
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
  app_logs: 